ain">&nbsp;customers</span><span class="java_separator">.</span><span class="java_plain">get</span><span class="java_separator">(</span><span class="java_literal">0</span><span class="java_separator">);</span>
<!--  --><br/><span class="java_plain">&nbsp;&nbsp;&nbsp;&nbsp;customer</span><span class="java_separator">.</span><span class="java_plain">updateStuff</span><span class="java_separator">(...);</span>
<!--  --><br/><span class="java_plain">&nbsp;&nbsp;&nbsp;&nbsp;session</span><span class="java_separator">.</span><span class="java_plain">update</span><span class="java_separator">(</span><span class="java_plain">customer</span><span class="java_separator">);</span>
<!--  --><br/><span class="java_separator">}</span>
<!--  --><br/><span class="java_plain">&nbsp;&nbsp;&nbsp;</span>
<!--  --><br/><span class="java_plain">tx</span><span class="java_separator">.</span><span class="java_plain">commit</span><span class="java_separator">();</span>
<!--  --><br/><span class="java_plain">session</span><span class="java_separator">.</span><span class="java_plain">close</span><span class="java_separator">();</span></pre><p>Notez que dans le code de l'exemple, les instances de <code class="literal">Customer</code> retournées par la requête sont immédiatement détachées. Elles ne sont jamais associées à un contexte de persistance.  </p><p>Les opérations <code class="literal">insert()</code>, <code class="literal">update()</code> et <code class="literal">delete()</code> définies par l'interface <code class="literal">StatelessSession</code> sont considérées comme des opérations d'accès direct aux lignes de la base de données, ce qui résulte en une exécution immédiate du SQL <code class="literal">INSERT</code>, <code class="literal">UPDATE</code> ou <code class="literal">DELETE</code> respectivement. Ainsi, elles ont des sémantiques très différentes des opérations <code class="literal">save()</code>, <code class="literal">saveOrUpdate()</code> et <code class="literal">delete()</code> définies par l'interface <code class="literal">Session</code>. </p></div><div class="section" lang="fr-FR"><div class="titlepage"><div><div><h2 class="title"><a id="batch-direct"/>15.4. Opérations de style DML</h2></div></div></div><p>As already discussed, automatic and transparent object/relational mapping is concerned with the management of the object state. The object state is available in memory. This means that manipulating data directly in the database (using the SQL <code class="literal">Data Manipulation Language</code> (DML) the statements: <code class="literal">INSERT</code>, <code class="literal">UPDATE</code>, <code class="literal">DELETE</code>) will not affect in-memory state. However, Hibernate provides methods for bulk SQL-style DML statement execution that is performed through the Hibernate Query Language (<a class="link" href="queryhql.html" title="Chapitre 16. HQL : langage d'interrogation d'Hibernate">HQL</a>). </p><p>La pseudo-syntaxe pour les expressions <code class="literal">UPDATE</code> et <code class="literal">DELETE</code> est : <code class="literal">( UPDATE | DELETE ) FROM? EntityName (WHERE where_conditions)?</code>.  </p><p>Certains points à noter : </p><div class="itemizedlist"><ul compact="compact"><li><p>Dans la clause from, le mot-clef FROM est optionnel </p></li><li><p>Il ne peut y avoir qu'une seule entité nommée dans la clause from ; elle peut optionnellement avoir un alias. Si le nom de l'entité a un alias, alors n'importe quelle référence de propriété doit être qualifiée en utilisant un alias ; si le nom de l'entité n'a pas d'alias, il sera illégal pour n'importe quelle référence de propriété d'être qualifiée. </p></li><li><p>No <a class="link" href="queryhql.html#queryhql-joins-forms" title="16.4. Formes de syntaxes pour les jointures">joins</a>, either implicit or explicit, can be specified in a bulk HQL query. Sub-queries can be used in the where-clause, where the subqueries themselves may contain joins. </p></li><li><p>La clause where- est aussi optionnelle. </p></li></ul></div><p>Par exemple, pour exécuter un HQL <code class="literal">UPDATE</code>, utilisez la méthode <code class="literal">Query.executeUpdate()</code> (la méthode est données pour ceux qui connaissent <code class="literal">PreparedStatement.executeUpdate()</code> de JDBC) :  </p><pre xmlns="" xmlns:rf="java:org.jboss.highlight.XhtmlRendererFactory" class="JAVA"><!-- <br/> --><span class="java_type">Session</span><!-- <br/> --><span class="java_plain">&nbsp;session&nbsp;</span><!-- <br/> --><span class="java_operator">=</span><!-- <br/> --><span class="java_plain">&nbsp;sessionFactory</span><!-- <br/> --><span class="java_separator">.</span><!-- <br/> --><span class="java_plain">openSession</span><!-- <br/> --><span class="java_separator">();</span>
<!--  --><br/><span class="java_type">Transaction</span><span class="java_plain">&nbsp;tx&nbsp;</span><span class="java_operator">=</span><span class="java_plain">&nbsp;session</span><span class="java_separator">.</span><span class="java_plain">beginTransaction</span><span class="java_separator">();</span>
</span>
<!--  --><br/><span class="java_type">String</span><span class="java_plain">&nbsp;hqlUpdate&nbsp;</span><span class="java_operator">=</span><span class="java_plain">&nbsp;</span><span class="java_literal">&quot;update&nbsp;Customer&nbsp;c&nbsp;set&nbsp;c.name&nbsp;=&nbsp;:newName&nbsp;where&nbsp;c.name&nbsp;=&nbsp;:oldName&quot;</span><span class="java_separator">;</span>
<!--  --><br/><span class="java_operator">//</span><span class="java_plain">&nbsp;or&nbsp;</span><span class="java_type">String</span><span class="java_plain">&nbsp;hqlUpdate&nbsp;</span><span class="java_operator">=</span><span class="java_plain">&nbsp;</span><span class="java_literal">&quot;update&nbsp;Customer&nbsp;set&nbsp;name&nbsp;=&nbsp;:newName&nbsp;where&nbsp;name&nbsp;=&nbsp;:oldName&quot;</span><span class="java_separator">;</span>
<!--  --><br/><span class="java_type">int</span><span class="java_plain">&nbsp;updatedEntities&nbsp;</span><span class="java_operator">=</span><span class="java_plain">&nbsp;s</span><span class="java_separator">.</span><span class="java_plain">createQuery</span><span class="java_separator">(</span><span class="java_plain">&nbsp;hqlUpdate&nbsp;</span><span class="java_separator">)</span>
<!--  --><br/><span class="java_plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="java_separator">.</span><span class="java_plain">setString</span><span class="java_separator">(</span><span class="java_plain">&nbsp;</span><span class="java_literal">&quot;newName&quot;</span><span class="java_separator">,</span><span class="java_plain">&nbsp;newName&nbsp;</span><span class="java_separator">)</span>
<!--  --><br/><span class="java_plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="java_separator">.</span><span class="java_plain">setString</span><span class="java_separator">(</span><span class="java_plain">&nbsp;</span><span class="java_literal">&quot;oldName&quot;</span><span class="java_separator">,</span><span class="java_plain">&nbsp;oldName&nbsp;</span><span class="java_separator">)</span>
<!--  --><br/><span class="java_plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="java_separator">.</span><span class="java_plain">executeUpdate</span><span class="java_separator">();</span>
<!--  --><br/><span class="java_plain">tx</span><span class="java_separator">.</span><span class="java_plain">commit</span><span class="java_separator">();</span>
<!--  --><br/><span class="java_plain">session</span><span class="java_separator">.</span><span class="java_plain">close</span><span class="java_separator">();</span></pre><p>In keeping with the EJB3 specification, HQL <code class="literal">UPDATE</code> statements, by default, do not effect the <a class="link" href="">version</a> or the <a class="link" href="mapping.html#mapping-declaration-timestamp" title="5.1.3.2. Timestamp">timestamp</a> property values for the affected entities. However, you can force Hibernate to reset the <code class="literal">version</code> or <code class="literal">timestamp</code> property values through the use of a <code class="literal">versioned update</code>. This is achieved by adding the <code class="literal">VERSIONED</code> keyword after the <code class="literal">UPDATE</code> keyword. </p><pre xmlns="" xmlns:rf="java:org.jboss.highlight.XhtmlRendererFactory" class="JAVA"><!-- <br/> --><span class="java_type">Session</span><!-- <br/> --><span class="java_plain">&nbsp;session&nbsp;</span><!-- <br/> --><span class="java_operator">=</span><!-- <br/> --><span class="java_plain">&nbsp;sessionFactory</span><!-- <br/> --><span class="java_separator">.</span><!-- <br/> --><span class="java_plain">openSession</span><!-- <br/> --><span class="java_separator">();</span>
<!--  --><br/><span class="java_type">Transaction</span><span class="java_plain">&nbsp;tx&nbsp;</span><span class="java_operator">=</span><span class="java_plain">&nbsp;session</span><span class="java_separator">.</span><span class="java_plain">beginTransaction</span><span class="java_separator">();</span>
<!--  --><br/><span class="java_type">String</span><span class="java_plain">&nbsp;hqlVersionedUpdate&nbsp;</span><span class="java_operator">=</span><span class="java_plain">&nbsp;</span><span class="java_literal">&quot;update&nbsp;versioned&nbsp;Customer&nbsp;set&nbsp;name&nbsp;=&nbsp;:newName&nbsp;where&nbsp;name&nbsp;=&nbsp;:oldName&quot;</span><span class="java_separator">;</span>
<!--  --><br/><span class="java_type">int</span><span class="java_plain">&nbsp;updatedEntities&nbsp;</span><span class="java_operator">=</span><span class="java_plain">&nbsp;s</span><span class="java_separator">.</span><span class="java_plain">createQuery</span><span class="java_separator">(</span><span class="java_plain">&nbsp;hqlUpdate&nbsp;</span><span class="java_separator">)</span>
<!--  --><br/><span class="java_plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="java_separator">.</span><span class="java_plain">setString</span><span class="java_separator">(</span><span class="java_plain">&nbsp;</span><span class="java_literal">&quot;newName&quot;</span><span class="java_separator">,</span><span class="java_plain">&nbsp;newName&nbsp;</span><span class="java_separator">)</span>
<!--  --><br/><span class="java_plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="java_separator">.</span><span class="java_plain">setString</span><span class="java_separator">(</span><span class="java_plain">&nbsp;</span><span class="java_literal">&quot;oldName&quot;</span><span class="java_separator">,</span><span class="java_plain">&nbsp;oldName&nbsp;</span><span class="java_separator">)</span>
<!--  --><br/><span class="java_plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="java_separator">.</span><span class="java_plain">executeUpdate</span><span class="java_separator">();</span>
<!--  --><br/><span class="java_plain">tx</span><span class="java_separator">.</span><span class="java_plain">commit</span><span class="java_separator">();</span>
<!--  --><br/><span class="java_plain">session</span><span class="java_separator">.</span><span class="java_plain">close</span><span class="java_separator">();</span></pre><p>Notez que les types personnalisés (<code class="literal">org.hibernate.usertype.UserVersionType</code>) ne sont pas permis en conjonction avec la déclaration <code class="literal">update versioned</code>.  </p><p>Pour exécuter un HQL <code class="literal">DELETE</code>, utilisez la même méthode <code class="literal">Query.executeUpdate()</code> : </p><pre xmlns="" xmlns:rf="java:org.jboss.highlight.XhtmlRendererFactory" class="JAVA"><!-- <br/> --><span class="java_type">Session</span><!-- <br/> --><span class="java_plain">&nbsp;session&nbsp;</span><!-- <br/> --><span class="java_operator">=</span><!-- <br/> --><span class="java_plain">&nbsp;sessionFactory</span><!-- <br/> --><span class="java_separator">.</span><!-- <br/> --><span class="java_plain">openSession</span><!-- <br/> --><span class="java_separator">();</span>
<!--  --><br/><span class="java_type">Transaction</span><span class="java_plain">&nbsp;tx&nbsp;</span><span class="java_operator">=</span><span class="java_plain">&nbsp;session</span><span class="java_separator">.</span><span class="java_plain">beginTransaction</span><span class="java_separator">();</span>
</span>
<!--  --><br/><span class="java_type">String</span><span class="java_plain">&nbsp;hqlDelete&nbsp;</span><span class="java_operator">=</span><span class="java_plain">&nbsp;</span><span class="java_literal">&quot;delete&nbsp;Customer&nbsp;c&nbsp;where&nbsp;c.name&nbsp;=&nbsp;:oldName&quot;</span><span class="java_separator">;</span>
<!--  --><br/><span class="java_operator">//</span><span class="java_plain">&nbsp;or&nbsp;</span><span class="java_type">String</span><span class="java_plain">&nbsp;hqlDelete&nbsp;</span><span class="java_operator">=</span><span class="java_plain">&nbsp;</span><span class="java_literal">&quot;delete&nbsp;Customer&nbsp;where&nbsp;name&nbsp;=&nbsp;:oldName&quot;</span><span class="java_separator">;</span>
<!--  --><br/><span class="java_type">int</span><span class="java_plain">&nbsp;deletedEntities&nbsp;</span><span class="java_operator">=</span><span class="java_plain">&nbsp;s</span><span class="java_separator">.</span><span class="java_plain">createQuery</span><span class="java_separator">(</span><span class="java_plain">&nbsp;hqlDelete&nbsp;</span><span class="java_separator">)</span>
<!--  --><br/><span class="java_plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="java_separator">.</span><span class="java_plain">setString</span><span class="java_separator">(</span><span class="java_plain">&nbsp;</span><span class="java_literal">&quot;oldName&quot;</span><span class="java_separator">,</span><span class="java_plain">&nbsp;oldName&nbsp;</span><span class="java_separator">)</span>
<!--  --><br/><span class="java_plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="java_separator">.</span><span class="java_plain">executeUpdate</span><span class="java_separator">();</span>
<!--  --><br/><span class="java_plain">tx</span><span class="java_separator">.</span><span class="java_plain">commit</span><span class="java_separator">();</span>
<!--  --><br/><span class="java_plain">session</span><span class="java_separator">.</span><span class="java_plain">close</span><span class="java_separator">();</span></pre><p>La valeur du <code class="literal">int</code> retourné par la méthode <code class="literal">Query.executeUpdate()</code> indique le nombre d'entités affectées par l'opération. Considérez que cela peut ou non, corréler le nombre de lignes affectées dans la base de données. Une opération HQL pourrait entraîner l'exécution de multiples expressions SQL réelles, pour des classes filles mappées par jointure (join-subclass), par exemple. Le nombre retourné indique le nombre d'entités réelles affectées par l'expression. Si on revient à l'exemple de la classe fille mappée par jointure, un effacement d'une des classes filles peut réellement entraîner des suppressions pas seulement dans la table à laquelle la classe fille est mappée, mais également dans la table "racine" et potentillement dans les tables des classes filles plus bas dans la hiérarchie d'héritage.  </p><p>La pseudo-syntaxe pour l'expression <code class="literal">INSERT</code> est : <code class="literal">INSERT INTO EntityName properties_list select_statement</code>. Quelques points sont à noter : </p><div class="itemizedlist"><ul compact="compact"><li><p>Seule la forme INSERT INTO ... SELECT ... est supportée ; pas la forme INSERT INTO ... VALUES ... . </p><p>La properties_list est analogue à la <code class="literal">column speficiation</code> dans la déclaration SQL <code class="literal">INSERT</code>. Pour les entités impliquées dans un héritage mappé, seules les propriétés directement définies à ce niveau de classe donné peuvent être utilisées dans properties_list. Les propriétés de la classe mère ne sont pas permises ; et les propriétés des classes filles n'ont pas de sens. En d'autres termes, les expressions <code class="literal">INSERT</code> sont par nature non polymorphiques.  </p></li><li><p>select_statement peut être n'importe quelle requête de sélection HQL valide, avec l'avertissement que les types de retour doivent correspondre aux types attendus par l'insertion. Actuellement, cela est vérifié durant la compilation de la requête plutôt que de reléguer la vérification à la base de données. Notez cependant que cela pourrait poser des problèmes entre les <code class="literal">Type</code>s de Hibernate qui sont <span class="emphasis"><em>équivalents</em></span> contrairement à <span class="emphasis"><em>égaux</em></span>. Cela pourrait poser des problèmes avec des disparités entre une propriété définie comme un <code class="literal">org.hibernate.type.DateType</code> et une propriété définie comme un <code class="literal">org.hibernate.type.TimestampType</code>, bien que la base de données ne fasse pas de distinction ou ne soit pas capable de gérer la conversion. </p></li><li><p>Pour la propriété id, l'expression d'insertion vous donne deux options. Vous pouvez soit spécifier explicitement la propriété id dans properties_list (auquel cas sa valeur est extraite de l'expression de sélection correspondante), soit l'omettre de properties_list (auquel cas une valeur générée est utilisée). Cette dernière option est seulement disponible si vous utilisez le générateur d'identifiant qui opère dans la base de données ; tenter d'utiliser cette option avec n'importe quel type de générateur "en mémoire" causera une exception durant l'analyse. Notez que pour les buts de cette discussion, les générateurs "en base" sont considérés comme <code class="literal">org.hibernate.id.SequenceGenerator</code> (et ses classes filles) et n'importe quelles implémentations de <code class="literal">org.hibernate.id.PostInsertIdentifierGenerator</code>. L'exception la plus notable ici est <code class="literal">org.hibernate.id.TableHiLoGenerator</code>, qui ne peut pas être utilisée parce qu'elle ne propose pas de moyen d'obtenir ses valeurs par un select.  </p></li><li><p>Pour des propriétés mappées comme <code class="literal">version</code> ou <code class="literal">timestamp</code>, l'expression d'insertion vous donne deux options. Vous pouvez soit spécifier la propriété dans properties_list (auquel cas sa valeur est extraite des expressions select correspondantes), soit l'omettre de properties_list (auquel cas la <code class="literal">seed value</code> définie par le <code class="literal">org.hibernate.type.VersionType</code> est utilisée).  </p></li></ul></div><p>Un exemple d'exécution d'une expression HQL <code class="literal">INSERT</code> :  </p><pre xmlns="" xmlns:rf="java:org.jboss.highlight.XhtmlRendererFactory" class="JAVA"><!-- <br/> --><span class="java_type">Session</span><!-- <br/> --><span class="java_plain">&nbsp;session&nbsp;</span><!-- <br/> --><span class="java_operator">=</span><!-- <br/> --><span class="java_plain">&nbsp;sessionFactory</span><!-- <br/> --><span class="java_separator">.</span><!-- <br/> --><span class="java_plain">openSession</span><!-- <br/> --><span class="java_separator">();</span>
<!--  --><br/><span class="java_type">Transaction</span><span class="java_plain">&nbsp;tx&nbsp;</span><span class="java_operator">=</span><span class="java_plain">&nbsp;session</span><span class="java_separator">.</span><span class="java_plain">beginTransaction</span><span class="java_separator">();</span>
</span>
<!--  --><br/><span class="java_type">String</span><span class="java_plain">&nbsp;hqlInsert&nbsp;</span><span class="java_operator">=</span><span class="java_plain">&nbsp;</span><span class="java_literal">&quot;insert&nbsp;into&nbsp;DelinquentAccount&nbsp;(id,&nbsp;name)&nbsp;select&nbsp;c.id,&nbsp;c.name&nbsp;from&nbsp;Customer&nbsp;c&nbsp;where&nbsp;...&quot;</span><span class="java_separator">;</span>
<!--  --><br/><span class="java_type">int</span><span class="java_plain">&nbsp;createdEntities&nbsp;</span><span class="java_operator">=</span><span class="java_plain">&nbsp;s</span><span class="java_separator">.</span><span class="java_plain">createQuery</span><span class="java_separator">(</span><span class="j